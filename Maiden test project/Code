
# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load
â€‹
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import accuracy_score, classification_report
from sklearn.linear_model import LogisticRegression

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# Import the training data

X = pd.read_csv("/kaggle/input/spaceship-titanic/train.csv")
X.head()

# Clean the data step-by-step


X["Transported"] = X["Transported"].astype(int)
y = X["Transported"]
X = X.drop(["Transported"], axis = 1)

# Name of the passengers has nothing to do with the disappearence
X = X.drop(["Name"], axis = 1)
X = X.drop(["PassengerId"], axis = 1)


# Convert cardinal data 
ohe_cat_cols = [col for col in X if
           (X[col].dtype == 'object')]
            
num_cols = [col for col in X if
           X[col].dtype in ['int64', 'float64']]
           

#Using SimpleImputer() for numerical columns with strategy "mean"
si = SimpleImputer(strategy = "mean", missing_values = np.nan)

X[num_cols] = si.fit_transform(X[num_cols])
X[num_cols] = si.fit_transform(X[num_cols])

X = pd.get_dummies(X, columns = ohe_cat_cols)

#split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, random_state =1)

# Build the modeland fit
f_model = LogisticRegression(solver = 'lbfgs', random_state = 1, max_iter = 5000)
f_model.fit(X_train, y_train)
prediction = f_model.predict(X_test)
accuracy_score(y_test, prediction)
